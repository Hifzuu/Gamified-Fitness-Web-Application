@using Microsoft.AspNetCore.Identity
@model List<ProjectWebApp.Models.ClanViewModel>
@inject UserManager<ApplicationUser> UserManager
@inject ProjectWebApp.Data.ApplicationDbContext dbContext
@{
    ViewData["Title"] = "Clans";
}
@{
    // Get leader details
    var leader = Model[0].Members.FirstOrDefault(member => member.Id == Model[0].CreatorId);
    var leaderProfilePictureUrl = await GetProfilePictureUrl(Model[0].CreatorId.ToString());
    var leaderPoints = await GetUserPoints(Model[0].CreatorId.ToString());

    // Order members by points
    var orderedMembers = Model[0].Members
    .OrderByDescending(member => member.Points)
    .ToList();

    // Remove leader from the ordered list (if exists)
    orderedMembers.RemoveAll(member => member.Id == Model[0].CreatorId);

    // Add leader to the beginning of the ordered list
    orderedMembers.Insert(0, leader);
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ProjectWebApp</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/site.css" />
</head>
<style>
    .rank {
        font-weight: bold;
        font-size: 18px; /* Adjust font size as needed */
        margin-right:0;
    }

    .first-place {
        color: gold; /* Color for first place */
    }

    .second-place {
        color: silver; /* Color for second place */
    }

    .third-place {
        color: #cd7f32; /* Color for third place (bronze) */
    }

    .clan-name
    {
        color: black;
        font-weight: normal;
        margin-left:10px;
    }


</style>
<body>
    <div class="page-container">

        <div class="row row-equal-height">
            <div class="col-md-12 col-lg-6">
                <section style="max-height: 500px; min-height:500px; overflow-y: hidden; overflow-x:hidden; padding:0;">
                    @if (Model.Count > 0)
                    {

                        <div>
                            <!-- Clan Info Section -->
                            <div class="clan-info d-flex justify-content-between align-items-center">
                                <!-- Left Info Section -->
                                <div class="left-info">
                                    <h2 class="clan-name">@Model[0].Name</h2>
                                    @if (!string.IsNullOrEmpty(Model[0].bio))
                                    {
                                        <h2 class="clan-bio">"@Model[0].bio"</h2>
                                    }
                                    else
                                    {
                                        <h2 class="clan-bio">No Bio Set</h2>
                                    }
                                    <h2 class="clan-points">Clan Points: <i class="fas fa-medal" style="color: gold;">CP</i> @Model[0].ClanPoints</h2>
                                </div>
                                <!-- Action Buttons Section -->
                                <div class="action-buttons">
                                    @if (User.Identity.Name == Model[0].CreatorUserName)
                                    {
                                        <button class="btn edit-clan-btn" data-clan-id="@Model[0].ClanId">Edit Clan</button>
                                        <button class="btn btn-danger delete-clan-btn" data-clan-id="@Model[0].ClanId">Delete Clan</button>
                                    }
                                    else if (Model[0].Members.Any(member => member.UserName == User.Identity.Name))
                                    {
                                        <button class="btn btn-danger leave-clan-btn" data-clan-id="@Model[0].ClanId">Leave Clan</button>
                                    }
                                </div>
                            </div>

                            <!-- Members Section -->
                            <div class="d-flex justify-content-between pt-2 align-items-center">
                                <!-- Updated alignment to center vertically -->
                                <h2 class="members-section text-dark pb-0 mb-0">Members</h2>
                                <!-- Search Input with custom styles -->
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <span class="input-group-text bg-transparent border-0 rounded-0">
                                            <i class="fas fa-search text-muted"></i> <!-- Font Awesome search icon -->
                                        </span>
                                    </div>
                                    <input type="text" id="memberSearchInput" class="form-control border-0 rounded-0 pl-0" placeholder="Search members...">

                                </div>
                                <h2 class="members-section text-dark pb-0 mb-0">@Model[0].Members.Count()/30</h2>
                            </div>


                            <!-- Member List Section -->
                            <div class="members-section" style="max-height: 340px; overflow-y: auto;">
                                <!-- Member List -->
                                <div class="member-list pb-2">
                                    <!-- Member Items -->
                                    @if (Model[0].Members.Any())
                                    {
                                        <!-- Loop through members -->
                                        @foreach (var member in orderedMembers)
                                        {
                                            <!-- Display member item -->
                                            <div class="media member-item mt-3">
                                                <img src="@await GetProfilePictureUrl(member.Id)" class="mr-3 rounded-circle" alt="User Profile Picture" width="50" height="50">
                                                <div class="media-body d-flex align-items-center justify-content-between w-100">
                                                    <div>
                                                        <h5 class="mt-0 mb-0">@member.UserName</h5>
                                                        @if (member.Id == Model[0].CreatorId)
                                                        {
                                                            <span class="badge badge-info">Leader</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge badge-secondary">Member</span>
                                                        }
                                                    </div>
                                                    <div>
                                                        <span class="member-points">
                                                            <i class="fas fa-coins gold-coin-icon"></i>
                                                            <strong>@member.Points</strong> <strong style="font-size: 0.7em;">pts</strong>
                                                        </span>
                                                        @if (User.Identity.Name == Model[0].CreatorUserName && member.Id != Model[0].CreatorId)
                                                        {
                                                            <button class="btn btn-outline-danger btn-sm kick-member-btn" data-member-id="@member.Id">Kick</button>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p class="text-muted">No members</p>
                                    }
                                </div>
                            </div>
                        </div>


                    }
                    else
                    {
                        <div class="no-clan">
                            <h2 class="clan-title">My Clan</h2>
                            <div class="clan-message">
                                <p class="text-muted">You haven't joined a clan yet. Why not create or join one now?</p>
                                <div class="button-container">
                                    <button class="btn btn-primary" data-toggle="modal" data-target="#joinClanModal">Join a Clan</button>
                                    <button class="btn btn-success" data-toggle="modal" data-target="#createClanModal">Create a Clan</button>
                                </div>
                            </div>
                        </div>


                    }
                </section>

            </div>
            <div id="availableClansContainer" class="col-md-12 col-lg-6">
                <section style="max-height: 500px; min-height:500px;">
                    <h2>Discover Clans</h2>
                    <div style="max-height: 420px; overflow-y: auto;">
                        <ul id="availableClansList" class="list-group"></ul>
                    </div>
                </section>
            </div>
            <div class="col-md-12 col-lg-12">
                <section style="max-height: 400px; min-height:400px;">
                    <h2>Leaderboard</h2>
                    <div style="max-height: 320px; overflow-y: auto;">
                        <ul id="clanLeaderboard" class="list-group"></ul>
                    </div>
                </section>
            </div>


        </div>

        
    </div>

    <!-- Join Clan Modal -->
    <div class="modal fade" id="joinClanModal" tabindex="-1" role="dialog" aria-labelledby="joinClanModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="joinClanModalLabel">Join a Clan</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <!-- Search Input -->
                    <div class="input-group mb-3">
                        <input type="text" id="searchClanInput" class="form-control" placeholder="Search for a Clan" autocomplete="off">
                    </div>

                    <!-- Search Results -->
                    <div id="searchResults">
                        <!-- Search results will be dynamically populated here -->
                    </div>

                    <!-- Divider -->
                    <hr class="my-4">

                    <!-- Normal Results -->
                    <div id="normalResults">
                        <ul id="joinClanList" class="list-group list-group-flush" style="max-height: 250px; overflow-y: auto;">
                            <!-- List items will be dynamically populated here -->
                        </ul>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>



    <!-- Create Clan Modal -->
    <div class="modal fade" id="createClanModal" tabindex="-1" role="dialog" aria-labelledby="createClanModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="createClanModalLabel">Create a Clan</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <p class="lead mb-4">Creating a clan requires 1000 points</p>

                    <!-- Add a form to input the clan name, bio, and a button to create -->
                    <form id="createClanForm" asp-action="CreateClan" method="post">
                        @Html.AntiForgeryToken()

                        <!-- Clan Name Input -->
                        <div class="form-group">
                            <label for="clanName">Clan Name:</label>
                            <input type="text" class="form-control" id="clanName" placeholder="Enter Clan Name" required>
                        </div>

                        <!-- Clan Bio Input -->
                        <div class="form-group">
                            <label for="clanBio">Clan Bio:</label>
                            <textarea class="form-control" id="clanBio" rows="3" placeholder="Enter Clan Bio"></textarea>
                        </div>

                        <!-- Create Clan Button -->
                        <button type="submit" class="btn btn-primary btn-block" id="createClanButton">Create Clan</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!--Edit clan info-->
    @{
        if (Model != null && Model.Count > 0)
        {
            <div class="modal fade" id="editBioModal" tabindex="-1" role="dialog" aria-labelledby="editBioModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editBioModalLabel">Edit Clan Info</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="clanName">Name:</label>
                                <input type="text" class="form-control" id="clanName" value="@Model[0].Name" readonly>
                            </div>
                            <div class="form-group">
                                <label for="clanPoints">Points:</label>
                                <input type="text" class="form-control" id="clanPoints" value="@Model[0].ClanPoints" readonly>
                            </div>
                            <div class="form-group">
                                <label for="currentBio">Bio:</label>
                                <textarea class="form-control" id="currentBio" rows="3">@Model[0].bio</textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="saveBioBtn">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <p>No clan data available.</p>
        }
    }




 
    <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.3/dist/umd/popper.min.js" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>
         $(document).ready(function () {
            $('#memberSearchInput').on('input', function () {
                var searchQuery = $(this).val().toLowerCase();
                $('.member-item').each(function () {
                    var memberName = $(this).find('h5').text().toLowerCase();
                    if (memberName.includes(searchQuery)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });
        });

        // Function to fetch available clans and update the HTML
        function loadAvailableClans() {
            $.ajax({
                url: '@Url.Action("getAvailableClans", "Clan")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    console.log('Received data:', data);
                    // Clear the existing lists
                    $('#availableClansList, #joinClanList').empty();

                    // Check if there are any available clans
                    if (data.length > 0) {
                        // Iterate through the available clans
                        $.each(data, function (index, clan) {
                            // Use 'let' to declare the 'clan' variable within the loop scope
                            let clanName = clan.name; // Access the 'name' property

                            if (clanName !== undefined && clanName !== null) {
                                // Create a list item element with Bootstrap classes
                                var listItem = $('<li class="list-group-item d-flex justify-content-between align-items-center">');

                                // Display the clan name and points
                                listItem.text(clanName);

                                // Create a clan points element
                                var clanPoints = $('<p class="clan-points"><i class="fas fa-medal" style="color: gold;">CP</i><strong> ' + clan.clanPoints + '</strong></p>');

                                // Create a join button and attach clan ID as data attribute
                                var joinButton = $('<button class="btn btn-primary join-btn">').text('Join').data('clan-id', clan.clanId);

                                // Append the clan points and join button to the list item
                                listItem.append(clanPoints, joinButton);

                                // Append the list item to both lists
                                $('#availableClansList, #joinClanList').append(listItem);

                                console.log('Processing clan:', clan);
                            }

                        });

                    } else {
                        // Display a message if no clans are available
                        $('#availableClansList').append('<li class="list-group-item text-muted">No available clans</li>');
                        $('#joinClanList').append('<li class="list-group-item text-muted">No available clans</li>');
                    }
                },
                error: function (error) {
                    console.error('Error fetching available clans:', error);
                }
            });
        }



        // Load available clans when the page loads
        $(document).ready(function () {
            loadAvailableClans();
        });

        // Function to join clans
        $(document).on('click', '.join-btn', function () {
            var clanId = $(this).data('clan-id');

            // Use AJAX to call the JoinClan action method
            $.ajax({
                url: '/Clan/JoinClan',
                type: 'POST',
                data: { clanId: clanId },
                dataType: 'json',
                success: function (data) {
                    if (data.success) {
                        // Display success message (e.g., using Swal)
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.message,
                            didClose: () => {
                                // Reload the page after Swal is closed
                                location.reload();
                            }
                        });
                    } else {
                        // Display error message
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                },
                error: function (error) {
                    console.error('Error joining the clan: ', error);
                }
            });
        });


        // Function to create clan
        $("#createClanButton").click(function () {
            event.preventDefault(); // Prevent the default form submission behavior
            console.log('Create Clan button clicked');

            // Specify the required points to create a clan
            var requiredPoints = 1000; // Adjust the required points as needed

            // Make an AJAX request to get the user's current points
            $.ajax({
                url: '/Clan/GetCurrentUserPoints', // Replace with the actual URL of your method
                type: 'GET',
                dataType: 'json',
                success: function (userData) {
                    // Check if the user has enough points
                    console.log('Checking user points');
                    if (userData < requiredPoints) {
                        // Display an error message if the user doesn't have enough points
                        Swal.fire({
                            icon: 'error',
                            title: 'Insufficient Points',
                            text: 'You do not have enough points to create a clan.'
                        });
                        return; // Exit the function without proceeding
                    }

                    // Ask for confirmation with the cost information
                    Swal.fire({
                        icon: 'question',
                        title: 'Create Clan Confirmation',
                        text: `Creating a clan costs ${requiredPoints} points. Are you sure you want to proceed?`,
                        showCancelButton: true,
                        confirmButtonText: 'Yes, create the clan',
                        cancelButtonText: 'Cancel',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Proceed with clan creation if the user confirms
                            console.log('User confirmed, proceeding with clan creation');

                            // Make an AJAX request to create the clan
                            $.ajax({
                                url: $("#createClanForm").attr("action"),
                                type: 'POST',
                                data: {
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                                    Name: $("#clanName").val(), // Add the name field from the form
                                    Bio: $("#clanBio").val() // Add the bio field from the form
                                },
                                success: function (response) {
                                    // Handle success
                                    if (response.success) {
                                        // Deduct points from the user
                                        $.ajax({
                                            url: '/Clan/UpdatePoints', // Replace with the actual URL of your method
                                            type: 'POST',
                                            data: { points: requiredPoints },
                                            success: function () {
                                                // Display success message (e.g., using Swal)
                                                Swal.fire({
                                                    icon: 'success',
                                                    title: 'Success',
                                                    text: response.message,
                                                    didClose: () => {
                                                        // Reload the page after Swal is closed
                                                        location.reload();
                                                    }
                                                });
                                                console.log('AJAX success response:', response);
                                                // Close the modal or take other actions as needed
                                                $('#createClanModal').modal('hide');
                                            },
                                            error: function (error) {
                                                console.error('Error updating user points: ', error);
                                            }
                                        });
                                    } else {
                                        // Display error message
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: response.message
                                        });
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.error('Error creating clan: ', error);

                                    // Display a generic error message to the user
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An error occurred during the clan creation process. Please try again later.',
                                    });
                                }
                            });
                        }
                    });
                },
                error: function (error) {
                    console.error('Error getting user points: ', error);
                }
            });
        });


        // function to leave clan
        $('.leave-clan-btn').on('click', function () {
            var clanId = $(this).data('clan-id');

            // Display a confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to leave the clan. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, leave it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with leaving the clan

                    // Use AJAX to call the LeaveClan action method
                    $.ajax({
                        url: '/Clan/LeaveClan',
                        type: 'POST',
                        data: { clanId: clanId },
                        dataType: 'json',
                        success: function (data) {
                            if (data.success) {
                                // Display success message and handle redirection
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message,
                                    didClose: () => {
                                        // Reload the page after Swal is closed
                                        location.reload();
                                    }
                                });
                            } else {
                                // Display error message
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        },
                        error: function (error) {
                            console.error('Error leaving the clan: ', error);
                        }
                    });
                }
            });
        });

        // Similar confirmation for delete action
        $('.delete-clan-btn').on('click', function () {
            var clanId = $(this).data('clan-id');

            // Display a confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete the clan. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with deleting the clan

                    // Use AJAX to call the DeleteClan action method
                    $.ajax({
                        url: '/Clan/DeleteClan',
                        type: 'POST',
                        data: { clanId: clanId },
                        dataType: 'json',
                        success: function (data) {
                            if (data.success) {
                                // Display success message and handle redirection
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message,
                                    didClose: () => {
                                        // Reload the page after Swal is closed
                                        location.reload();
                                    }
                                });
                            } else {
                                // Display error message
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        },
                        error: function (error) {
                            console.error('Error deleting the clan: ', error);
                        }
                    });
                }
            });
        });


        // Function to load clan leaderboards
        function loadClanLeaderboards() {
            $.ajax({
                url: '/Clan/Leaderboards', // Replace this with your actual endpoint URL
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    console.log('Received clan leaderboards data:', data);
                    var leaderboardList = $('#clanLeaderboard');
                    leaderboardList.empty(); // Clear existing content

                    // Check if data is not empty
                    if (data && data.length > 0) {
                        // Iterate through the leaderboard data
                        $.each(data, function (index, clan) {
                            // Create list item for each clan
                            var listItem = $('<li class="list-group-item d-flex justify-content-between align-items-center">');

                            // Display rank and clan name together without space
                            var rankAndName = $('<span class="rank">' + '#' + (index + 1) + ' <span class="clan-name text-dark font-weight-bold">' + clan.name + '</span></span>');
                            if (index === 0) {
                                rankAndName.addClass('first-place');
                            } else if (index === 1) {
                                rankAndName.addClass('second-place');
                            } else if (index === 2) {
                                rankAndName.addClass('third-place');
                            }

                            // Append rank and clan name to the list item
                            listItem.append(rankAndName);

                            // Create a clan points element
                            var clanPoints = $('<p class="clan-points"><i class="fas fa-medal" style="color: gold;">CP</i><strong> ' + clan.points + '</strong></p>');

                            // Append the clan points to the list item
                            listItem.append(clanPoints);

                            leaderboardList.append(listItem);
                        });
                    } else {
                        // Display a message if there are no leaderboards available
                        leaderboardList.append('<li class="list-group-item">No leaderboards available</li>');
                    }

                },
                error: function (error) {
                    console.error('Error fetching clan leaderboards:', error);
                }
            });
        }



        // Call the function to load clan leaderboards when the page loads
        $(document).ready(function () {
            loadClanLeaderboards();
        });

        $('.kick-member-btn').click(function () {
            var memberId = $(this).data('member-id');

            // Show confirmation dialog with Swal
            Swal.fire({
                title: "Are you sure?",
                text: "Once kicked, this member will be removed from the clan!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, kick them!"
            }).then((willKick) => {
                if (willKick.isConfirmed) {
                    // If confirmed, make AJAX call to kick the member
                    $.ajax({
                        url: '/Clan/KickMember', 
                        type: 'POST',
                        data: { memberId: memberId },
                        success: function (response) {
                            // Handle success response
                            Swal.fire({
                                icon: "success",
                                title: "Member kicked successfully!",
                            }).then(() => {
                                // Optionally, reload the page or update UI as needed
                                location.reload();
                            });
                        },
                        error: function (xhr, status, error) {
                            // Handle error response
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Failed to kick member. Please try again later.",
                            });
                        }
                    });
                }
            });
        });

        // Function to handle search input changes
        $('#searchClanInput').on('input', function () {
            var searchText = $(this).val().toLowerCase(); // Convert input to lowercase for case-insensitive search

            // Make AJAX request to search for clans
            $.ajax({
                url: '/Clan/SearchClans', // Adjust URL if necessary
                type: 'GET',
                data: { searchText: searchText }, // Pass the search text as a query parameter
                dataType: 'json',
                success: function (data) {
                    // Update the HTML to display the search results
                    displaySearchResults(data);
                },
                error: function (xhr, status, error) {
                    console.log("Error searching clans: " + error);
                }
            });
        });

        // Function to display search results
        function displaySearchResults(clans) {
            var $searchResults = $('#searchResults');

            // Clear previous search results
            $searchResults.empty();

            // Check if there are any matching clans
            if (clans.length > 0) {
                // Iterate through the available clans
                clans.forEach(function (clan) {
                    // Use 'let' to declare the 'clan' variable within the loop scope
                    let clanName = clan.name; // Access the 'name' property

                    if (clanName !== undefined && clanName !== null) {
                        // Create a list item element with Bootstrap classes
                        var listItem = $('<li class="list-group-item d-flex justify-content-between align-items-center">');

                        // Display the clan name and points
                        listItem.text(clanName);

                        // Create a clan points element
                        var clanPoints = $('<p class="clan-points"><i class="fas fa-medal" style="color: gold;">CP</i><strong> ' + clan.clanPoints + '</strong></p>');

                        // Create a join button and attach clan ID as data attribute
                        var joinButton = $('<button class="btn btn-primary join-btn">').text('Join').data('clan-id', clan.clanId);

                        // Append the clan points and join button to the list item
                        listItem.append(clanPoints, joinButton);

                        // Append the list item to the search results
                        $searchResults.append(listItem);

                        console.log('Processing clan:', clan);
                    }
                });
            } else {
                // Check if the search input is empty
                var searchText = $('#searchClanInput').val();
                if (searchText === '') {
                    // Clear the search results and show nothing if search text is empty
                    $searchResults.empty();
                } else {
                    // Display a message if no clans are available
                    $searchResults.html('<p>No matching clans found.</p>');
                }
            }
        }

        $(".edit-clan-btn").click(function () {
            var clanId = $(this).data("clan-id");
            $('#editBioModal').modal('show');

            $('#saveBioBtn').click(function () {
                var newBio = $('#currentBio').val().trim(); // Getting the bio from the modal textarea

                if (newBio !== "") {
                    $.ajax({
                        url: '/Clan/EditClanBio',
                        type: 'POST',
                        data: {
                            clanId: clanId,
                            newBio: newBio
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: response.message,
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    location.reload(); // Reload the page after successful update
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message,
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred while updating the clan bio.',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Please enter a valid bio.',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });


    </script>

</body>


@functions {
    public async Task<string> GetProfilePictureUrl(string userId)
    {
        if (!string.IsNullOrEmpty(userId))
        {
            // Retrieve the user from UserManager asynchronously
            var user = await UserManager.FindByIdAsync(userId);

            // Check if the user has a profile picture
            if (user != null && !string.IsNullOrEmpty(user.ProfileImageUrl))
            {
                return user.ProfileImageUrl;
            }
        }

        // Use a default or empty profile picture URL
        return "/Images/empty-pfp.png";
    }

   [HttpGet]
    public async Task<int> GetUserPoints(string id)
    {
        var user = await UserManager.FindByIdAsync(id);

        if (user != null)
        {
            var points = user.Points;
            return (points);
        }

        return (0); 
    }




}

</html>

