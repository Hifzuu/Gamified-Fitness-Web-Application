@using Microsoft.AspNetCore.Identity
@model List<ProjectWebApp.Models.ClanViewModel>
@inject UserManager<ApplicationUser> UserManager
@inject ProjectWebApp.Data.ApplicationDbContext dbContext
@{
    ViewData["Title"] = "Clans";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ProjectWebApp</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/site.css" />
</head>

<body>
    <div class="page-container">

        <div class="row row-equal-height">
            <div class="col-md-12 col-lg-6">
                <section>
                    @if (Model.Count > 0)
                    {
                        <div class="row">
                            <div class="col">
                                <h2 class="clan-title">My Clan</h2>
                            </div>
                            <div class="col-auto">
                                @if (User.Identity.Name == Model[0].CreatorUserName)
                                {
                                    <button class="btn btn-danger delete-clan-btn" data-clan-id="@Model[0].ClanId">Delete Clan</button>
                                }
                                else if (Model[0].Members.Any(member => member.UserName == User.Identity.Name))
                                {
                                    <button class="btn btn-danger leave-clan-btn" data-clan-id="@Model[0].ClanId">Leave Clan</button>
                                }
                            </div>
                        </div>
                        <div class="clan-details-container">
                            <h2 class="clan-name">@Model[0].Name</h2>

                            <p class="creator-info">
                                <div class="media">
                                    <!-- Fetch the profile picture of the leader -->
                                    <img src="await @GetProfilePictureUrl(Model[0].CreatorId)" class="mr-3 rounded-circle" alt="Leader Profile Picture" width="50" height="50">
                                    <div class="media-body d-flex align-items-center">
                                        <h5 class="mt-0">@Model[0].CreatorUserName</h5>
                                        <!-- Add additional leader details if needed -->
                                    </div>
                                    <!-- Add leader role status at the far right -->
                                    <div class="ml-auto">
                                        <span class="badge badge-info">Leader</span>
                                    </div>
                                </div>
                            </p>

                            <div class="members-section">
                                @if (Model[0].Members.Any())
                                {
                                    <div class="mt-3">
                                        @foreach (var member in Model[0].Members)
                                        {
                                            <div class="media mb-2">
                                                <img src="@await GetProfilePictureUrl(member.Id)" class="mr-3 rounded-circle" alt="User Profile Picture" width="50" height="50">
                                                <div class="media-body d-flex align-items-center">
                                                    <h5 class="mt-0">@member.UserName</h5>
                                                    <!-- Add additional member details if needed -->
                                                </div>
                                                <!-- Add member role status at the far right -->
                                                <div class="ml-auto">
                                                    <span class="badge badge-secondary">Member</span>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="text-muted">No members</p>
                                }
                            </div>
                        </div>

                    






                    }

                    else
                    {
                        <h2 class="clan-title">My Clan</h2>
                        <!-- Display message and buttons to join or create a clan if the user has not joined a clan -->
                        <p class="text-muted">You have not joined a clan. Consider creating or joining one!</p>
                        <div>
                            <button class="btn btn-primary" data-toggle="modal" data-target="#joinClanModal">Join a Clan</button>
                            <button class="btn btn-success" data-toggle="modal" data-target="#createClanModal">Create a Clan</button>
                        </div>
                    }
                </section>
            </div>
            <div id="availableClansContainer" class="col-md-12 col-lg-6">
                <section>
                    <h2>Discover Clans</h2>
                    <ul id="availableClansList" class="list-group"></ul>
                </section>
            </div>

        </div>

        
    </div>

    <!-- Join Clan Modal -->
    <div class="modal fade" id="joinClanModal" tabindex="-1" role="dialog" aria-labelledby="joinClanModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="joinClanModalLabel">Join a Clan</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <p class="lead">Select a Clan to Join:</p>
                    <ul id="joinClanList" class="list-group"></ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Create Clan Modal -->
    <div class="modal fade" id="createClanModal" tabindex="-1" role="dialog" aria-labelledby="createClanModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="createClanModalLabel">Create a Clan</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <p class="lead mb-4">Creating a clan requires 1000 points</p>

                    <!-- Add a form to input the clan name and a button to create -->
                    <form id="createClanForm" asp-action="CreateClan" method="post">
                        @Html.AntiForgeryToken()

                        <!-- Clan Name Input -->
                        <div class="form-group">
                            <label for="clanName">Clan Name:</label>
                            <input type="text" class="form-control" id="clanName" placeholder="Enter Clan Name" required>
                        </div>

                        <!-- Create Clan Button -->
                        <button type="submit" class="btn btn-primary btn-block" id="createClanButton">Create Clan</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


 
    <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.3/dist/umd/popper.min.js" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>
        // Function to fetch available clans and update the HTML
        function loadAvailableClans() {
            $.ajax({
                url: '@Url.Action("getAvailableClans", "Community")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    console.log('Received data:', data);
                    // Clear the existing lists
                    $('#availableClansList, #joinClanList').empty();

                    // Check if there are any available clans
                    if (data.length > 0) {
                        // Iterate through the available clans
                        $.each(data, function (index, clan) {
                            // Use 'let' to declare the 'clan' variable within the loop scope
                            let clanName = clan.name; // Access the 'name' property

                            if (clanName !== undefined && clanName !== null) {
                                // Append to the first list with Bootstrap classes for spacing
                                var listItem1 = $('<li class="list-group-item d-flex justify-content-between align-items-center">').text(clanName);
                                var joinButton1 = $('<button class="btn btn-primary join-btn">').text('Join').data('clan-id', clan.clanId);
                                listItem1.append(joinButton1);
                                $('#availableClansList').append(listItem1);

                                // Append to the second list with Bootstrap classes for spacing
                                var listItem2 = $('<li class="list-group-item d-flex justify-content-between align-items-center">').text(clanName);
                                var joinButton2 = $('<button class="btn btn-primary join-btn">').text('Join').data('clan-id', clan.clanId);
                                listItem2.append(joinButton2);
                                $('#joinClanList').append(listItem2);

                                console.log('Processing clan:', clan);
                            }
                        });

                    } else {
                        // Display a message if no clans are available
                        $('#availableClansList').append('<li class="list-group-item text-muted">No available clans</li>');
                        $('#joinClanList').append('<li class="list-group-item text-muted">No available clans</li>');
                    }
                },
                error: function (error) {
                    console.error('Error fetching available clans:', error);
                }
            });
        }


        // Load available clans when the page loads
        $(document).ready(function () {
            loadAvailableClans();
        });

        // Function to join clans
        $(document).on('click', '.join-btn', function () {
            var clanId = $(this).data('clan-id');

            // Use AJAX to call the JoinClan action method
            $.ajax({
                url: '/Community/JoinClan',
                type: 'POST',
                data: { clanId: clanId },
                dataType: 'json',
                success: function (data) {
                    if (data.success) {
                        // Display success message (e.g., using Swal)
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.message,
                            didClose: () => {
                                // Reload the page after Swal is closed
                                location.reload();
                            }
                        });
                    } else {
                        // Display error message
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                },
                error: function (error) {
                    console.error('Error joining the clan: ', error);
                }
            });
        });


        // Function to create clan
        $("#createClanButton").click(function () {
            event.preventDefault(); // Prevent the default form submission behavior
            console.log('Create Clan button clicked');

            // Specify the required points to create a clan
            var requiredPoints = 1000; // Adjust the required points as needed

            // Make an AJAX request to get the user's current points
            $.ajax({
                url: '/Community/GetCurrentUserPoints', // Replace with the actual URL of your method
                type: 'GET',
                dataType: 'json',
                success: function (userData) {
                    // Check if the user has enough points
                    console.log('Checking user points');
                    if (userData < requiredPoints) {
                        // Display an error message if the user doesn't have enough points
                        Swal.fire({
                            icon: 'error',
                            title: 'Insufficient Points',
                            text: 'You do not have enough points to create a clan.'
                        });
                        return; // Exit the function without proceeding
                    }

                    // Ask for confirmation with the cost information
                    Swal.fire({
                        icon: 'question',
                        title: 'Create Clan Confirmation',
                        text: `Creating a clan costs ${requiredPoints} points. Are you sure you want to proceed?`,
                        showCancelButton: true,
                        confirmButtonText: 'Yes, create the clan',
                        cancelButtonText: 'Cancel',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Proceed with clan creation if the user confirms
                            console.log('User confirmed, proceeding with clan creation');

                            // Make an AJAX request to create the clan
                            $.ajax({
                                url: $("#createClanForm").attr("action"),
                                type: 'POST',
                                data: {
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                                    Name: $("#clanName").val() // Add the name field from the form
                                },
                                success: function (response) {
                                    // Handle success
                                    if (response.success) {
                                        // Deduct points from the user
                                        $.ajax({
                                            url: '/Community/UpdatePoints', // Replace with the actual URL of your method
                                            type: 'POST',
                                            data: { points: requiredPoints },
                                            success: function () {
                                                // Display success message (e.g., using Swal)
                                                Swal.fire({
                                                    icon: 'success',
                                                    title: 'Success',
                                                    text: response.message,
                                                    didClose: () => {
                                                        // Reload the page after Swal is closed
                                                        location.reload();
                                                    }
                                                });
                                                console.log('AJAX success response:', response);
                                                // Close the modal or take other actions as needed
                                                $('#createClanModal').modal('hide');
                                            },
                                            error: function (error) {
                                                console.error('Error updating user points: ', error);
                                            }
                                        });
                                    } else {
                                        // Display error message
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: response.message
                                        });
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.error('Error creating clan: ', error);

                                    // Display a generic error message to the user
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An error occurred during the clan creation process. Please try again later.',
                                    });
                                }
                            });
                        }
                    });
                },
                error: function (error) {
                    console.error('Error getting user points: ', error);
                }
            });
        });


        // function to leave clan
        $('.leave-clan-btn').on('click', function () {
            var clanId = $(this).data('clan-id');

            // Display a confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to leave the clan. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, leave it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with leaving the clan

                    // Use AJAX to call the LeaveClan action method
                    $.ajax({
                        url: '/Community/LeaveClan',
                        type: 'POST',
                        data: { clanId: clanId },
                        dataType: 'json',
                        success: function (data) {
                            if (data.success) {
                                // Display success message and handle redirection
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message,
                                    didClose: () => {
                                        // Reload the page after Swal is closed
                                        location.reload();
                                    }
                                });
                            } else {
                                // Display error message
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        },
                        error: function (error) {
                            console.error('Error leaving the clan: ', error);
                        }
                    });
                }
            });
        });

        // Similar confirmation for delete action
        $('.delete-clan-btn').on('click', function () {
            var clanId = $(this).data('clan-id');

            // Display a confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete the clan. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with deleting the clan

                    // Use AJAX to call the DeleteClan action method
                    $.ajax({
                        url: '/Community/DeleteClan',
                        type: 'POST',
                        data: { clanId: clanId },
                        dataType: 'json',
                        success: function (data) {
                            if (data.success) {
                                // Display success message and handle redirection
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message,
                                    didClose: () => {
                                        // Reload the page after Swal is closed
                                        location.reload();
                                    }
                                });
                            } else {
                                // Display error message
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        },
                        error: function (error) {
                            console.error('Error deleting the clan: ', error);
                        }
                    });
                }
            });
        });





    </script>

</body>


@functions {
    public async Task<string> GetProfilePictureUrl(string userId)
    {
        // Check if the user ID is provided
        if (string.IsNullOrEmpty(userId))
        {
            // Use a default or empty profile picture URL
            return "/Images/empty-pfp.png";
        }

        // Retrieve the user from UserManager asynchronously using the provided user ID
        var user = await UserManager.FindByIdAsync(userId);

        // Check if the user has a profile picture
        if (user != null && !string.IsNullOrEmpty(user.ProfileImageUrl))
        {
            return user.ProfileImageUrl;
        }

        // Use a default or empty profile picture URL
        return "/Images/empty-pfp.png";
    }


}

</html>

