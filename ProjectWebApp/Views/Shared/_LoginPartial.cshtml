@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var current = ViewContext.RouteData.Values["controller"] as string;
    var actionCurrent = ViewContext.RouteData.Values["action"] as string;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - ProjectWebApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/ProjectWebApp.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/site.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />


    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        function updatePoints() {
            $.ajax({
                url: '@Url.Action("GetCurrentUserPoints", "Workout")',  // Adjust controller name as needed
                type: 'GET',
                success: function (points) {
                    // Assuming you have an element with id 'userPoints' in your partial view
                    $('#userPoints').text(`Points: ${points}`);

                    // Handle other success actions if needed
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred while fetching user's points: " + error);
                }
            });
        }

        // Call the updatePoints function when the page is loaded
        $(document).ready(function () {
            updatePoints();
        });
    </script>
</head>

<body>
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);

        <ul class="logout-nav">
            <li class="nav-itemLP">
                @if (User.Identity?.IsAuthenticated ?? false)
                {
                    var firstName = User.Claims.FirstOrDefault(c => c.Type == "FirstName")?.Value;
                    var points = GetCurrentUserPoints(); // Function to get user points

                    <span class="user-details">
                        <i class="fas fa-coins gold-coin-icon"></i> @points points | Welcome back, @firstName!&nbsp;
                    </span>
                }
                else
                {
                    <span class="user-details">
                        Guest
                    </span>
                }
            </li>
            <li class="nav-itemLP dropdown" id="userDropdownContainer">
                <a class="nav-link " id="userDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <div class="profile-container">
                        <img class="profile-picture" src="@GetProfilePictureUrl()" alt="Profile Picture" id="profile-picture" />
                    </div>
                </a>
                <div class="dropdown-menu dropdown-menu-end position-fixed" aria-labelledby="userDropdown" style="top: 60px; right: 0;">
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Manage Account</a>
                    <a class="dropdown-item" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm">
                        <button type="submit" class="dropdown-item">Log Out</button>
                    </form>
                </div>
            </li>
        </ul>

    }
    else
    {
        <ul class="logout-nav">
            <li class="nav-itemLP">
                <a class="nav-loggedout" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-itemLP">
                <a class="nav-loggedout" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        </ul>
    }
 
</body>

@functions {
    public string GetProfilePictureUrl()
    {
        // Check if the user is authenticated
        if (User.Identity?.IsAuthenticated == true)
        {
            // Retrieve the user from UserManager synchronously
            var user = UserManager.GetUserAsync(User).GetAwaiter().GetResult();

            // Check if the user has a profile picture
            if (user != null && !string.IsNullOrEmpty(user.ProfileImageUrl))
            {
                return user.ProfileImageUrl;
            }
        }

        // Use a default or empty profile picture URL
        return "/Images/empty-pfp.png";
    }

    private int GetCurrentUserPoints()
    {
        var user = UserManager.GetUserAsync(User).Result;

        // Assuming Points is the property in your ApplicationUser model
        return user?.Points ?? 0;
    }
}

</html>