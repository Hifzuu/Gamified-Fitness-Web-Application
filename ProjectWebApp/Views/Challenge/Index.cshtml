@model ProjectWebApp.ViewModels.ChallengeViewModel
@{
    ViewData["Title"] = "Challenges";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ProjectWebApp</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/site.css" />
</head>

<body>
    <div class="page-container ">
        <div class="row">
            <div class="col-lg-6 col-md-12 mb-2">
                <section id="dailyChallengeSection" class="challenge-card game-card" style="background-color: white;">
                    @if (Model.DailyChallenge != null)
                    {
                        <div class="row">
                            <div class="col-md-6 d-flex align-items-center">
                                <h2 class="game-title">Daily Challenge</h2>
                            </div>
                            <div class="col-md-6 text-md-right">
                                <h5 class="challenge-timer" id="dailyTimer">
                                    Time remaining: @Model.DailyTime
                                </h5>
                            </div>
                        </div>

                        <div class="">
                            <h6>@Model.DailyChallenge.Challenge.Name</h6>
                            <p class="reward-text">
                                Complete this challenge and earn <strong><i class="fas fa-coins gold-coin-icon mr-2"></i>20</strong> <strong style="font-size: 0.7em;">points</strong>
                            </p>
                            <p class="challenge-description"><strong>@Model.DailyChallenge.Challenge.Description</strong></p>
                            <div class="game-progress">
                                <p class="game-progress-text">Progress: @Math.Min(Model.DailyProgressPercentage, 100).ToString("0.##")%</p>
                                <div class="progress">
                                    <div class="progress-bar game-progress-bar" role="progressbar" style="width: @Model.DailyProgressPercentage%" aria-valuenow="@Model.DailyProgressPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                            <div class="game-elements d-flex justify-content-center align-items-center">
                                @if (Model.DailyProgressPercentage >= 100)
                                {
                                    if (!Model.DailyChallenge.IsRewardClaimed)
                                    {
                                        <button class="btn btn-reward game-button" onclick="claimReward('Daily', @Model.DailyChallenge.UserChallengeId)">Claim Reward 🎁</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-reward game-button claimed" disabled>Claimed 🎁</button>
                                    }
                                }
                                else
                                {
                                    <button class="btn btn-reward game-button incomplete" disabled>Complete to claim</button>
                                }
                            </div>

                            <!-- Scrollable Row for Filtered Workouts -->
                            <div class="scrollable-row" id="allWorkouts">
                                @foreach (var workout in Model.DailyChallengeWorkouts)
                                {
                                    <!-- Workout Card -->
                                    <div class="col-lg-4 col-md-6 col-sm-12" data-category="@workout.Category" style="max-width:200px; padding:10px;"
                                         data-difficulty="@workout.difficulty" data-muscle="@workout.TargetMuscle"
                                         data-points="@workout.rewardPoints">
                                        <a href="@Url.Action("Details", "Workout", new { id = workout.WorkoutId })"
                                           class="card workout-link">
                                            <img src="@workout.ImageUrl" class="card-img-top" alt="Workout Image" style="height: 150px;">
                                            <div class="card-body">
                                                <p class="workout-name">@workout.Name</p>
                                                <span class="points" style="font-family: 'Roboto', sans-serif; font-size: 1.1em; letter-spacing: 1px;">
                                                    <i class="fas fa-coins gold-coin-icon mr-2"></i>
                                                    <strong>@workout.rewardPoints</strong> <strong style="font-size: 0.7em;">points</strong>
                                                </span>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                        <div></div>
                    }
                    else
                    {
                        <h2 class="game-title">Daily Challenge</h2>
                        <p class="text-muted">No daily challenges available for today.</p>
                    }



                </section>
            </div>

            <div class="col-lg-6 col-md-12 mb-2">
                <section id="weeklyChallengeSection" class="challenge-card game-card" style="background-color: white;">
                    @if (Model.WeeklyChallenge != null)
                    {
                        <div class="row">
                            <div class="col-md-6 d-flex align-items-center">
                                <h2 class="game-title">Weekly Challenge</h2>
                            </div>
                            <div class="col-md-6 text-md-right">
                                <h5 class="challenge-timer" id="weeklyTimer">
                                    Time remaining: @Model.WeeklyTime
                                </h5>
                            </div>
                        </div>

                        <div class="">
                            <h6>@Model.WeeklyChallenge.Challenge.Name</h6>
                            <p class="reward-text">
                                Complete this challenge and earn <strong><i class="fas fa-coins gold-coin-icon mr-2"></i>50</strong> <strong style="font-size: 0.7em;">points</strong>
                            </p>
                            <p class="challenge-description"><strong>@Model.WeeklyChallenge.Challenge.Description</strong></p>
                            <div class="game-progress">
                                <p class="game-progress-text">Progress: @Math.Min(Model.WeeklyProgressPercentage, 100).ToString("0.##")%</p>
                                <div class="progress">
                                    <div class="progress-bar game-progress-bar" role="progressbar" style="width: @Model.WeeklyProgressPercentage%" aria-valuenow="@Model.WeeklyProgressPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                            <div class="game-elements d-flex justify-content-center align-items-center">
                                @if (Model.WeeklyProgressPercentage >= 100)
                                {
                                    if (!Model.WeeklyChallenge.IsRewardClaimed)
                                    {
                                        <button class="btn btn-reward game-button" onclick="claimReward('Daily', @Model.WeeklyChallenge.UserChallengeId)">Claim Reward 🎁</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-reward game-button claimed" disabled>Claimed 🎁</button>
                                    }
                                }
                                else
                                {
                                    <button class="btn btn-reward game-button incomplete" disabled>Complete to claim</button>
                                }
                            </div>

                            <!-- Scrollable Row for Filtered Workouts -->
                            <div class="scrollable-row" id="allWorkouts">
                                @foreach (var workout in Model.WeeklyChallengeWorkouts)
                                {
                                    <!-- Workout Card -->
                                    <div class="col-lg-4 col-md-6 col-sm-12" data-category="@workout.Category" style="max-width:200px; padding:10px;"
                                         data-difficulty="@workout.difficulty" data-muscle="@workout.TargetMuscle"
                                         data-points="@workout.rewardPoints">
                                        <a href="@Url.Action("Details", "Workout", new { id = workout.WorkoutId })"
                                           class="card workout-link">
                                            <img src="@workout.ImageUrl" class="card-img-top" alt="Workout Image" style="height: 150px;">
                                            <div class="card-body">
                                                <p class="workout-name">@workout.Name</p>
                                                <span class="points" style="font-family: 'Roboto', sans-serif; font-size: 1.1em; letter-spacing: 1px;">
                                                    <i class="fas fa-coins gold-coin-icon mr-2"></i>
                                                    <strong>@workout.rewardPoints</strong> <strong style="font-size: 0.7em;">points</strong>
                                                </span>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                        <div></div>
                    }
                    else
                    {
                        <h2 class="game-title">Weekly Challenge</h2>
                        <p class="text-muted">No weekly challenges available for today.</p>
                    }



                </section>
            </div>

            <div class="col-lg-12 col-md-12 mb-2">
                <section class="challenge-card game-card" style="background-color: white;">
                    @if (Model.MonthlyChallenge != null)
                    {
                        <div class="row">
                            <div class="col-md-6 d-flex align-items-center">
                                <h2 class="game-title">Monthly Challenge</h2>
                            </div>
                            <div class="col-md-6 text-md-right">
                                <h5 class="challenge-timer" id="monthlyTimer">
                                    Time remaining: @Model.MonthlyTime
                                </h5>
                            </div>
                        </div>

                        <div class="">
                            <h6>@Model.MonthlyChallenge.Challenge.Name</h6>
                            <p class="reward-text">
                                Complete this challenge and earn <strong><i class="fas fa-coins gold-coin-icon mr-2"></i>150</strong> <strong style="font-size: 0.7em;">points</strong>
                            </p>
                            <p class="challenge-description"><strong>@Model.MonthlyChallenge.Challenge.Description</strong></p>
                            <div class="game-progress">
                                <p class="game-progress-text">Progress: @Math.Min(Model.MonthlyProgressPercentage, 100).ToString("0.##")%</p>
                                <div class="progress">
                                    <div class="progress-bar game-progress-bar" role="progressbar" style="width: @Model.MonthlyProgressPercentage%" aria-valuenow="@Model.MonthlyProgressPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                            <div class="game-elements d-flex justify-content-center align-items-center">
                                @if (Model.MonthlyProgressPercentage >= 100)
                                {
                                    if (!Model.MonthlyChallenge.IsRewardClaimed)
                                    {
                                        <button class="btn btn-reward game-button" onclick="claimReward('Daily', @Model.MonthlyChallenge.UserChallengeId)">Claim Reward 🎁</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-reward game-button claimed" disabled>Claimed 🎁</button>
                                    }
                                }
                                else
                                {
                                    <button class="btn btn-reward game-button incomplete" disabled>Complete to claim</button>
                                }
                            </div>

                            <!-- Scrollable Row for Filtered Workouts -->
                            <div class="scrollable-row" id="allWorkouts">
                                @foreach (var workout in Model.MonthlyChallengeWorkouts)
                                {
                                    <!-- Workout Card -->
                                    <div class="col-lg-4 col-md-6 col-sm-12" data-category="@workout.Category" style="max-width:200px; padding:10px;"
                                         data-difficulty="@workout.difficulty" data-muscle="@workout.TargetMuscle"
                                         data-points="@workout.rewardPoints">
                                        <a href="@Url.Action("Details", "Workout", new { id = workout.WorkoutId })"
                                           class="card workout-link">
                                            <img src="@workout.ImageUrl" class="card-img-top" alt="Workout Image" style="height: 150px;">
                                            <div class="card-body">
                                                <p class="workout-name">@workout.Name</p>
                                                <span class="points" style="font-family: 'Roboto', sans-serif; font-size: 1.1em; letter-spacing: 1px;">
                                                    <i class="fas fa-coins gold-coin-icon mr-2"></i>
                                                    <strong>@workout.rewardPoints</strong> <strong style="font-size: 0.7em;">points</strong>
                                                </span>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                        <div></div>
                    }
                    else
                    {
                        <h2 class="game-title">Monthly Challenge</h2>
                        <p class="text-muted">No monthly challenges available.</p>
                    }



                </section>
            </div>
        </div>


    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>

        // Function to adjust section heights
        function adjustSectionHeights() {
            var dailyChallengeSection = document.getElementById("dailyChallengeSection");
            var weeklyChallengeSection = document.getElementById("weeklyChallengeSection");

            // Get the heights of both sections
            var dailyHeight = dailyChallengeSection.offsetHeight;
            var weeklyHeight = weeklyChallengeSection.offsetHeight;

            // Set the height of the shorter section to match the taller one
            if (dailyHeight < weeklyHeight) {
                dailyChallengeSection.style.height = weeklyHeight + "px";
            } else {
                weeklyChallengeSection.style.height = dailyHeight + "px";
            }
        }

        // Call the function when the window is resized or when a hidden div becomes visible
        window.addEventListener("resize", adjustSectionHeights);
        document.addEventListener("visibilitychange", function () {
            if (!document.hidden) {
                adjustSectionHeights();
            }
        });

        // Call the function initially
        adjustSectionHeights();

        function claimReward(challengeType, userChallengeId) {
            console.log('Claim reward button clicked.');
            var pointsToAward = 0;

            switch (challengeType) {
                case 'Daily':
                    pointsToAward = 20;
                    break;
                case 'Weekly':
                    pointsToAward = 50;
                    break;
                case 'Monthly':
                    pointsToAward = 150;
                    break;

                default:
                    break;
            }


            // Display the rewarded points in the SweetAlert modal
            Swal.fire({
                title: 'Congratulations!',
                html: `<p>Well Done! You have earned <strong>${pointsToAward} points!</strong></p>`,
                icon: 'success',
                confirmButtonText: 'OK',
            }).then((result) => {
                // Reload the page after the modal is closed
                if (result.isConfirmed || result.isDismissed) {
                    location.reload();
                }
            });

            // Update user's points 
            updatePointsChallenge(pointsToAward, userChallengeId);

        }

        function updatePointsChallenge(points, userChallengeId) {
            console.log("Adding points to db");
            $.ajax({
                url: '@Url.Action("updatePointsChallenge", "Challenge")',
                type: 'POST',
                data: { points: points, userChallengeId: userChallengeId },
                success: function (response) {
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred while updating user's points:");
                    console.error("XHR object:", xhr);
                    console.log("XHR response:", xhr.responseText);
                    console.error("Status:", status);
                    console.error("Error:", error);
                }
            });
        }

        function navigateToWorkouts() {
            window.location.href = "/Workout/Index";
        }
    </script>

    <script>
        function updateTimer(endDate, timerElementId) {
            var timerElement = document.getElementById(timerElementId);
            var currentUtcTime = new Date('@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ")');

            // Append a default date to endDate
            var endChallengeTime = new Date(endDate);

            // Calculate total seconds remaining until the end of the challenge
            var totalSecondsRemaining = Math.max(0, Math.floor((endChallengeTime - currentUtcTime) / 1000));

            // Update the timer display
            function updateDisplay() {
                var hours = Math.floor(totalSecondsRemaining / 3600);
                var minutes = Math.floor((totalSecondsRemaining % 3600) / 60);
                var seconds = totalSecondsRemaining % 60;

                timerElement.textContent = 'Time remaining: ' + hours + 'h ' + minutes + 'm ' + seconds + 's';
            }

            // Initial update
            updateDisplay();

            // Update the display every second
            var timerInterval = setInterval(function () {
                if (totalSecondsRemaining > 0) {
                    totalSecondsRemaining--;
                    updateDisplay();
                } else {
                    clearInterval(timerInterval);
                    timerElement.textContent = 'Challenge ended';
                }
            }, 1000);
        }

        // Call the updateTimer function when the page is loaded
        window.onload = function () {
            updateTimer('@Model.DailyTime', 'dailyTimer');
            updateTimer('@Model.WeeklyTime', 'weeklyTimer');
            updateTimer('@Model.MonthlyTime', 'monthlyTimer');
        };
    </script>




</body>
</html>

